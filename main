from datetime import datetime, timedelta
import math
import random
import sys
import time
import requests

from colorama import Fore, init
from termcolor import colored, cprint
from time import sleep
from web3.exceptions import TransactionNotFound
from requests.exceptions import ConnectTimeout

import config

init()

        ##### НАСТОРОЙКИ ОГРУГЛЕНИЯ, ПРОЦЕНТОВ, ПАУЗЫ #####
min_ratio = 0.95  # минимальное отношение диапазона генерации к максимальному балансу
max_ratio = 0.99  # максимальное отношение диапазона генерации к максимальному балансу
decimals = 4  # количество десятков для округления в меньшую сторону
pausa_v_1_akke = 60  # пауза в однов акке при количестве повторов больше 1  +-30% (пауза между транзакциями)
pausa_mejdu_koshelkami = 120 # пауза между кошельками, после успешного свапа, в скрипте будет применяться +- 20% (внедрить pausa = round(180 * (0.8 + 0.4 * random.random())))
# cena_FTM = 0.36  # цена фантома (заносить вручную)
# cena_MATIC = 0.87  # цена матика (заносит вручную)
# cena_AVAX = 15.3  # цена авакса (заносить вручную)
komsa_predel = 0.65  # предел комиссии моста LayerZero, выше которого транзакция скипается

def get_avax_price():
    url = "https://api.coingecko.com/api/v3/simple/price?ids=avalanche-2&vs_currencies=usd"
    response = requests.get(url)
    data = response.json()
    avax_price = data["avalanche-2"]["usd"]
    return avax_price

def get_ftm_price():
    url = "https://api.coingecko.com/api/v3/simple/price?ids=fantom&vs_currencies=usd"
    response = requests.get(url)
    data = response.json()
    ftm_price = data["fantom"]["usd"]
    return ftm_price

def get_matic_price():
    url = "https://api.coingecko.com/api/v3/simple/price?ids=matic-network&vs_currencies=usd"
    response = requests.get(url)
    data = response.json()
    matic_price = data["matic-network"]["usd"]
    return matic_price
